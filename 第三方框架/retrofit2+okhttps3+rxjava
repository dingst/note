https://github.com/square/okhttp

https://github.com/square/retrofit

https://github.com/ReactiveX/RxJava

https://github.com/ReactiveX/RxAndroid



Retrofit2 完全解析 探索与okhttp之间的关系
http://blog.csdn.net/lmj623565791/article/details/51304204

Retrofit2.0+okhttp3实现缓存，结合看下面的两篇文章
http://blog.csdn.net/changsimeng/article/details/54668884
http://blog.csdn.net/jdsjlzx/article/details/51482603

http://www.jianshu.com/p/6b3daeda1eed

Retrofit+RxJava 优雅的处理服务器返回异常、错误
http://blog.csdn.net/jdsjlzx/article/details/51882661

retrofit2中判断当前运行的环境代码：

class Platform {
  private static final Platform PLATFORM = findPlatform();

  static Platform get() {
    return PLATFORM;
  }

  private static Platform findPlatform() {
    try {
      Class.forName("android.os.Build");
      if (Build.VERSION.SDK_INT != 0) {
        return new Android();
      }
    } catch (ClassNotFoundException ignored) {
    }
    try {
      Class.forName("java.util.Optional");
      return new Java8();
    } catch (ClassNotFoundException ignored) {
    }
    try {
      Class.forName("org.robovm.apple.foundation.NSObject");
      return new IOS();
    } catch (ClassNotFoundException ignored) {
    }
    return new Platform();
  }
